// <auto-generated />
using System;
using CarRentalAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRentalAPI.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    partial class CarRentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarRentalAPI.Models.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarID"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerMinute")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("CarID");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarID = 1,
                            IsAvailable = true,
                            Make = "BMW",
                            Model = "M3",
                            PricePerMinute = 35.00m,
                            Year = 2023
                        },
                        new
                        {
                            CarID = 2,
                            IsAvailable = true,
                            Make = "Mercedes",
                            Model = "C-Class",
                            PricePerMinute = 30.00m,
                            Year = 2018
                        },
                        new
                        {
                            CarID = 3,
                            IsAvailable = true,
                            Make = "Audi",
                            Model = "A4",
                            PricePerMinute = 28.00m,
                            Year = 2017
                        },
                        new
                        {
                            CarID = 4,
                            IsAvailable = true,
                            Make = "Chevrolet",
                            Model = "Camaro",
                            PricePerMinute = 25.00m,
                            Year = 2022
                        },
                        new
                        {
                            CarID = 5,
                            IsAvailable = true,
                            Make = "Lexus",
                            Model = "IS",
                            PricePerMinute = 22.00m,
                            Year = 2021
                        },
                        new
                        {
                            CarID = 6,
                            IsAvailable = false,
                            Make = "Ford",
                            Model = "Mustang",
                            PricePerMinute = 20.00m,
                            Year = 2021
                        },
                        new
                        {
                            CarID = 7,
                            IsAvailable = true,
                            Make = "Honda",
                            Model = "Civic",
                            PricePerMinute = 18.00m,
                            Year = 2019
                        },
                        new
                        {
                            CarID = 8,
                            IsAvailable = true,
                            Make = "Toyota",
                            Model = "Corolla",
                            PricePerMinute = 15.00m,
                            Year = 2020
                        },
                        new
                        {
                            CarID = 9,
                            IsAvailable = true,
                            Make = "Volkswagen",
                            Model = "Golf",
                            PricePerMinute = 14.00m,
                            Year = 2020
                        },
                        new
                        {
                            CarID = 10,
                            IsAvailable = true,
                            Make = "Nissan",
                            Model = "Altima",
                            PricePerMinute = 12.00m,
                            Year = 2019
                        });
                });

            modelBuilder.Entity("CarRentalAPI.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientID = 1,
                            Email = "ivan.petrov@example.com",
                            FirstName = "Иван",
                            LastName = "Петров",
                            PhoneNumber = "89123456789"
                        },
                        new
                        {
                            ClientID = 2,
                            Email = "anna.sidorova@example.com",
                            FirstName = "Анна",
                            LastName = "Сидорова",
                            PhoneNumber = "89234567890"
                        },
                        new
                        {
                            ClientID = 3,
                            Email = "petr.ivanov@example.com",
                            FirstName = "Петр",
                            LastName = "Иванов",
                            PhoneNumber = "89345678901"
                        },
                        new
                        {
                            ClientID = 4,
                            Email = "maria.kuznevova@example.com",
                            FirstName = "Мария",
                            LastName = "Кузнецова",
                            PhoneNumber = "89456789012"
                        },
                        new
                        {
                            ClientID = 5,
                            Email = "sergey.smirnov@example.com",
                            FirstName = "Сергей",
                            LastName = "Смирнов",
                            PhoneNumber = "89567890123"
                        },
                        new
                        {
                            ClientID = 6,
                            Email = "elena.vasilieva@example.com",
                            FirstName = "Елена",
                            LastName = "Васильева",
                            PhoneNumber = "89678901234"
                        },
                        new
                        {
                            ClientID = 7,
                            Email = "dmitriy.medvedev@example.com",
                            FirstName = "Дмитрий",
                            LastName = "Медведев",
                            PhoneNumber = "89789012345"
                        },
                        new
                        {
                            ClientID = 8,
                            Email = "olga.tarasova@example.com",
                            FirstName = "Ольга",
                            LastName = "Тарасова",
                            PhoneNumber = "89890123456"
                        },
                        new
                        {
                            ClientID = 9,
                            Email = "aleksey.sokolov@example.com",
                            FirstName = "Алексей",
                            LastName = "Соколов",
                            PhoneNumber = "89901234567"
                        },
                        new
                        {
                            ClientID = 10,
                            Email = "natalya.popova@example.com",
                            FirstName = "Наталья",
                            LastName = "Попова",
                            PhoneNumber = "89012345678"
                        },
                        new
                        {
                            ClientID = 11,
                            Email = "viktor.novikov@example.com",
                            FirstName = "Виктор",
                            LastName = "Новиков",
                            PhoneNumber = "89112345678"
                        },
                        new
                        {
                            ClientID = 12,
                            Email = "tatyana.alekseeva@example.com",
                            FirstName = "Татьяна",
                            LastName = "Алексеева",
                            PhoneNumber = "89212345678"
                        },
                        new
                        {
                            ClientID = 13,
                            Email = "andrey.lebedev@example.com",
                            FirstName = "Андрей",
                            LastName = "Лебедев",
                            PhoneNumber = "89312345678"
                        },
                        new
                        {
                            ClientID = 14,
                            Email = "irina.kuznevova@example.com",
                            FirstName = "Ирина",
                            LastName = "Кузнецова",
                            PhoneNumber = "89412345678"
                        },
                        new
                        {
                            ClientID = 15,
                            Email = "sergey.sokolov@example.com",
                            FirstName = "Сергей",
                            LastName = "Соколов",
                            PhoneNumber = "89512345678"
                        });
                });

            modelBuilder.Entity("CarRentalAPI.Models.Rental", b =>
                {
                    b.Property<int>("RentalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentalID"));

                    b.Property<int>("CarID")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("RentalID");

                    b.HasIndex("CarID");

                    b.HasIndex("ClientID");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            RentalID = 1,
                            CarID = 1,
                            ClientID = 15,
                            DurationInMinutes = 35,
                            RentalDate = new DateTime(2024, 4, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 1225.00m
                        },
                        new
                        {
                            RentalID = 2,
                            CarID = 5,
                            ClientID = 3,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 2, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 2, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 600.00m
                        },
                        new
                        {
                            RentalID = 3,
                            CarID = 7,
                            ClientID = 8,
                            DurationInMinutes = 90,
                            RentalDate = new DateTime(2024, 4, 3, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 3, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 560.00m
                        },
                        new
                        {
                            RentalID = 4,
                            CarID = 2,
                            ClientID = 10,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 4, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 4, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 500.00m
                        },
                        new
                        {
                            RentalID = 5,
                            CarID = 10,
                            ClientID = 1,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 5, 10, 15, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 5, 12, 15, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 440.00m
                        },
                        new
                        {
                            RentalID = 6,
                            CarID = 6,
                            ClientID = 12,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 6, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 6, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 400.00m
                        },
                        new
                        {
                            RentalID = 7,
                            CarID = 3,
                            ClientID = 7,
                            DurationInMinutes = 150,
                            RentalDate = new DateTime(2024, 4, 7, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 7, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 315.00m
                        },
                        new
                        {
                            RentalID = 8,
                            CarID = 8,
                            ClientID = 5,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 8, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 8, 13, 15, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 300.00m
                        },
                        new
                        {
                            RentalID = 9,
                            CarID = 9,
                            ClientID = 2,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 9, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 280.00m
                        },
                        new
                        {
                            RentalID = 10,
                            CarID = 4,
                            ClientID = 13,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 10, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 10, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 210.00m
                        },
                        new
                        {
                            RentalID = 11,
                            CarID = 1,
                            ClientID = 11,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 11, 9, 45, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 11, 11, 45, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 1225.00m
                        },
                        new
                        {
                            RentalID = 12,
                            CarID = 2,
                            ClientID = 12,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 12, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 12, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 600.00m
                        },
                        new
                        {
                            RentalID = 13,
                            CarID = 3,
                            ClientID = 13,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 13, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 13, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 560.00m
                        },
                        new
                        {
                            RentalID = 14,
                            CarID = 4,
                            ClientID = 14,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 14, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 14, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 500.00m
                        },
                        new
                        {
                            RentalID = 15,
                            CarID = 5,
                            ClientID = 15,
                            DurationInMinutes = 120,
                            RentalDate = new DateTime(2024, 4, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 4, 15, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 440.00m
                        });
                });

            modelBuilder.Entity("CarRentalAPI.Models.Rental", b =>
                {
                    b.HasOne("CarRentalAPI.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRentalAPI.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
